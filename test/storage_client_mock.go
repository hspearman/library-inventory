// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hspearman/library-inventory/internal (interfaces: IStorageClient)

// Package test is a generated GoMock package.
package test

import (
	gomock "github.com/golang/mock/gomock"
	internal "github.com/hspearman/library-inventory/internal"
	reflect "reflect"
)

// MockIStorageClient is a mock of IStorageClient interface
type MockIStorageClient struct {
	ctrl     *gomock.Controller
	recorder *MockIStorageClientMockRecorder
}

// MockIStorageClientMockRecorder is the mock recorder for MockIStorageClient
type MockIStorageClientMockRecorder struct {
	mock *MockIStorageClient
}

// NewMockIStorageClient creates a new mock instance
func NewMockIStorageClient(ctrl *gomock.Controller) *MockIStorageClient {
	mock := &MockIStorageClient{ctrl: ctrl}
	mock.recorder = &MockIStorageClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIStorageClient) EXPECT() *MockIStorageClientMockRecorder {
	return m.recorder
}

// DecrementLibraryStock mocks base method
func (m *MockIStorageClient) DecrementLibraryStock(arg0 string) {
	m.ctrl.Call(m, "DecrementLibraryStock", arg0)
}

// DecrementLibraryStock indicates an expected call of DecrementLibraryStock
func (mr *MockIStorageClientMockRecorder) DecrementLibraryStock(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecrementLibraryStock", reflect.TypeOf((*MockIStorageClient)(nil).DecrementLibraryStock), arg0)
}

// DecrementUserStock mocks base method
func (m *MockIStorageClient) DecrementUserStock(arg0, arg1 string) {
	m.ctrl.Call(m, "DecrementUserStock", arg0, arg1)
}

// DecrementUserStock indicates an expected call of DecrementUserStock
func (mr *MockIStorageClientMockRecorder) DecrementUserStock(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecrementUserStock", reflect.TypeOf((*MockIStorageClient)(nil).DecrementUserStock), arg0, arg1)
}

// GetInventory mocks base method
func (m *MockIStorageClient) GetInventory() internal.Inventory {
	ret := m.ctrl.Call(m, "GetInventory")
	ret0, _ := ret[0].(internal.Inventory)
	return ret0
}

// GetInventory indicates an expected call of GetInventory
func (mr *MockIStorageClientMockRecorder) GetInventory() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInventory", reflect.TypeOf((*MockIStorageClient)(nil).GetInventory))
}

// GetUserInventory mocks base method
func (m *MockIStorageClient) GetUserInventory(arg0 string) internal.Inventory {
	ret := m.ctrl.Call(m, "GetUserInventory", arg0)
	ret0, _ := ret[0].(internal.Inventory)
	return ret0
}

// GetUserInventory indicates an expected call of GetUserInventory
func (mr *MockIStorageClientMockRecorder) GetUserInventory(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserInventory", reflect.TypeOf((*MockIStorageClient)(nil).GetUserInventory), arg0)
}

// IncrementLibraryStock mocks base method
func (m *MockIStorageClient) IncrementLibraryStock(arg0 string) {
	m.ctrl.Call(m, "IncrementLibraryStock", arg0)
}

// IncrementLibraryStock indicates an expected call of IncrementLibraryStock
func (mr *MockIStorageClientMockRecorder) IncrementLibraryStock(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementLibraryStock", reflect.TypeOf((*MockIStorageClient)(nil).IncrementLibraryStock), arg0)
}

// IncrementUserStock mocks base method
func (m *MockIStorageClient) IncrementUserStock(arg0, arg1 string) {
	m.ctrl.Call(m, "IncrementUserStock", arg0, arg1)
}

// IncrementUserStock indicates an expected call of IncrementUserStock
func (mr *MockIStorageClientMockRecorder) IncrementUserStock(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementUserStock", reflect.TypeOf((*MockIStorageClient)(nil).IncrementUserStock), arg0, arg1)
}

// SetInventory mocks base method
func (m *MockIStorageClient) SetInventory(arg0 internal.Inventory) {
	m.ctrl.Call(m, "SetInventory", arg0)
}

// SetInventory indicates an expected call of SetInventory
func (mr *MockIStorageClientMockRecorder) SetInventory(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetInventory", reflect.TypeOf((*MockIStorageClient)(nil).SetInventory), arg0)
}
